[tool.poetry]
name = "pypdffill"
version = "0.1.0"
description = ""
authors = ["Karl Wooster <karl.wooster@alleima.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.9.0"
pypdfform = "^1.4.33"
flask = "^3.0.3"
typer = "^0.12.5"
rich = "^13.8.0"

[tool.poetry.group.dev]
optional=true

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.4"
mypy = "^1.11.2"
commitizen = "^3.29.0"
pre-commit = "^3.8.0"

[tool.poetry.group.test]
optional=true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-sugar = "^1.0.0"
pytest-cov = "^5.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocstrings = {extras = ["python"], version = "^0.25.2"}
mkdocs-material = "^9.5.33"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.1"
mkdocs-section-index = "^0.3.9"
mkdocs-include-markdown-plugin = "^6.2.2"
griffe-fieldz = "^0.2.0"

[tool.poetry.scripts]
pypdffill = "pypdffill.cli:main"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG", # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF"
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "COM812",
  "ISC001",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
